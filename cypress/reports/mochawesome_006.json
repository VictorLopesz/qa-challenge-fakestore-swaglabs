{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-25T00:52:36.848Z",
    "end": "2025-08-25T00:52:37.863Z",
    "duration": 1015,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "850f1fc0-e4a9-46fb-8abc-7c2a35a7ff33",
      "title": "",
      "fullFile": "cypress\\e2e\\api-tests\\electronics.cy.js",
      "file": "cypress\\e2e\\api-tests\\electronics.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c459fcb9-f21e-4d32-98c8-8159c74cfa22",
          "title": "Electronics API Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should find electronics products with rate > 4",
              "fullTitle": "Electronics API Test Should find electronics products with rate > 4",
              "timedOut": null,
              "duration": 961,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Call the api\ncy.request(\"https://fakestoreapi.com/products\").then(({\n  status,\n  body\n}) => {\n  expect(status).to.equal(200);\n  expect(body).to.be.an(\"array\");\n  // Read the response, find all objects with property “electronics”\n  const elecProds = body.filter(p => p.category === \"electronics\");\n  // Compare the response if the objects have the select property\n  expect(elecProds.every(p => p.category === \"electronics\")).to.be.true;\n  // Count how many electronics products were found \n  cy.log(`Total electronics products: ${elecProds.length}`);\n  // Verify the number of objects with the property above appears with rate bigger than 4      \n  const highRatedProds = elecProds.filter(p => {\n    var _p$rating;\n    return ((_p$rating = p.rating) === null || _p$rating === void 0 ? void 0 : _p$rating.rate) > 4;\n  });\n  expect(highRatedProds.every(p => p.rating && p.rating.rate > 4)).to.be.true;\n  //Finally print found objects to console\n  cy.log(`High-rated electronics products bigger than 4: ${highRatedProds.length}`);\n  expect(highRatedProds.length).to.be.greaterThan(0);\n});",
              "err": {},
              "uuid": "ad2efc12-f2ba-467d-9a3d-be249afac753",
              "parentUUID": "c459fcb9-f21e-4d32-98c8-8159c74cfa22",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad2efc12-f2ba-467d-9a3d-be249afac753"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 961,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}